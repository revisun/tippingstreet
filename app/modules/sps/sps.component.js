"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@angular/core");
const lot_model_1 = require("../shared/lot/lot.model");
let SpsComponent = class SpsComponent {
    constructor() {
        this.text = 'Selling Price Simulation';
        this.baLot = new lot_model_1.Lot();
        this.baLot.netProceeds = 0;
        this.baLot.profFeeRate = 0;
        this.baLot.nonStdExpenses = 0;
    }
    submit() {
        if (this.baLot.netProceeds != 0 && this.baLot.profFeeRate != 0) {
            this.lotCalc();
        }
    }
    lotCalc() {
        var vTaxFactor1;
        var vTaxFactor2;
        vTaxFactor1 = 1 - 0.06 - 0.015 - this.baLot.profFeeRate;
        vTaxFactor2 = this.baLot.nonStdExpenses / ((this.baLot.netProceeds / vTaxFactor1) + +this.baLot.nonStdExpenses);
        this.baLot.capitalGainsTax = (this.baLot.netProceeds / (1 - .06 - .015 - this.baLot.profFeeRate - vTaxFactor2) * .06).toFixed(2);
        this.baLot.docsStamp = (this.baLot.netProceeds / (1 - .06 - .015 - this.baLot.profFeeRate - vTaxFactor2) * .015).toFixed(2);
        this.baLot.profFee = (this.baLot.netProceeds / (1 - .06 - .015 - this.baLot.profFeeRate - vTaxFactor2) * this.baLot.profFeeRate).toFixed(2);
        this.baLot.otherExpenses = (this.baLot.netProceeds / (1 - .06 - .015 - this.baLot.profFeeRate - vTaxFactor2) * vTaxFactor2).toFixed(2);
        this.baLot.sellPrice = Number((+this.baLot.netProceeds + +this.baLot.capitalGainsTax + +this.baLot.docsStamp + +this.baLot.profFee + +this.baLot.otherExpenses).toFixed(2));
    }
};
SpsComponent = __decorate([
    core_1.Component({
        selector: 'sps',
        templateUrl: 'modules/sps/sps.component.html',
        changeDetection: core_1.ChangeDetectionStrategy.OnPush
    }),
    __metadata("design:paramtypes", [])
], SpsComponent);
exports.SpsComponent = SpsComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNwcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx3Q0FBbUU7QUFDbkUsdURBQThDO0FBTzlDLElBQWEsWUFBWSxHQUF6QjtJQUlFO1FBSEEsU0FBSSxHQUFXLDBCQUEwQixDQUFDO1FBSXhDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxlQUFHLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQzNCLElBQUksQ0FBQyxLQUFLLENBQUMsY0FBYyxHQUFHLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsTUFBTTtRQUNKLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsSUFBSSxDQUFFLENBQUMsQ0FBQSxDQUFDO1lBQ2hFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNqQixDQUFDO0lBQ0gsQ0FBQztJQUVELE9BQU87UUFFSCxJQUFJLFdBQW1CLENBQUM7UUFDeEIsSUFBSSxXQUFtQixDQUFDO1FBRXhCLFdBQVcsR0FBRyxDQUFDLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQztRQUN4RCxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUc5RyxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxHQUFDLEdBQUcsR0FBQyxJQUFJLEdBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUMsV0FBVyxDQUFDLEdBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JILElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLEdBQUMsR0FBRyxHQUFDLElBQUksR0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBQyxXQUFXLENBQUMsR0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDaEgsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBQyxDQUFDLENBQUMsR0FBQyxHQUFHLEdBQUMsSUFBSSxHQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFDLFdBQVcsQ0FBQyxHQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hJLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUMsQ0FBQyxDQUFDLEdBQUMsR0FBRyxHQUFDLElBQUksR0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBQyxXQUFXLENBQUMsR0FBQyxXQUFXLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsZUFBZSxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFL0ssQ0FBQztDQUVILENBQUE7QUFsQ1ksWUFBWTtJQUx4QixnQkFBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLEtBQUs7UUFDZixXQUFXLEVBQUUsZ0NBQWdDO1FBQzdDLGVBQWUsRUFBRSw4QkFBdUIsQ0FBQyxNQUFNO0tBQ2hELENBQUM7O0dBQ1csWUFBWSxDQWtDeEI7QUFsQ1ksb0NBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IExvdCB9IGZyb20gJy4uL3NoYXJlZC9sb3QvbG90Lm1vZGVsJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc3BzJyxcclxuICB0ZW1wbGF0ZVVybDogJ21vZHVsZXMvc3BzL3Nwcy5jb21wb25lbnQuaHRtbCcsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIFNwc0NvbXBvbmVudCB7XHJcbiAgdGV4dDogc3RyaW5nID0gJ1NlbGxpbmcgUHJpY2UgU2ltdWxhdGlvbic7XHJcbiAgYmFMb3Q6IExvdDtcclxuXHJcbiAgY29uc3RydWN0b3IoKXtcclxuICAgIHRoaXMuYmFMb3QgPSBuZXcgTG90KCk7XHJcbiAgICB0aGlzLmJhTG90Lm5ldFByb2NlZWRzID0gMDtcclxuICAgIHRoaXMuYmFMb3QucHJvZkZlZVJhdGUgPSAwO1xyXG4gICAgdGhpcy5iYUxvdC5ub25TdGRFeHBlbnNlcyA9IDA7XHJcbiAgfVxyXG5cclxuICBzdWJtaXQoKXtcclxuICAgIGlmICggdGhpcy5iYUxvdC5uZXRQcm9jZWVkcyAhPSAwICYmIHRoaXMuYmFMb3QucHJvZkZlZVJhdGUgIT0gMCApe1xyXG4gICAgICB0aGlzLmxvdENhbGMoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGxvdENhbGMoKSB7XHJcblxyXG4gICAgICB2YXIgdlRheEZhY3RvcjE6IG51bWJlcjtcclxuICAgICAgdmFyIHZUYXhGYWN0b3IyOiBudW1iZXI7XHJcblxyXG4gICAgICB2VGF4RmFjdG9yMSA9IDEgLSAwLjA2IC0gMC4wMTUgLSB0aGlzLmJhTG90LnByb2ZGZWVSYXRlO1xyXG4gICAgICB2VGF4RmFjdG9yMiA9IHRoaXMuYmFMb3Qubm9uU3RkRXhwZW5zZXMgLyAoKHRoaXMuYmFMb3QubmV0UHJvY2VlZHMvdlRheEZhY3RvcjEpICsgK3RoaXMuYmFMb3Qubm9uU3RkRXhwZW5zZXMpO1xyXG5cclxuXHJcbiAgICAgIHRoaXMuYmFMb3QuY2FwaXRhbEdhaW5zVGF4ID0gKHRoaXMuYmFMb3QubmV0UHJvY2VlZHMvKDEtLjA2LS4wMTUtdGhpcy5iYUxvdC5wcm9mRmVlUmF0ZS12VGF4RmFjdG9yMikqLjA2KS50b0ZpeGVkKDIpO1xyXG4gICAgICB0aGlzLmJhTG90LmRvY3NTdGFtcCA9ICh0aGlzLmJhTG90Lm5ldFByb2NlZWRzLygxLS4wNi0uMDE1LXRoaXMuYmFMb3QucHJvZkZlZVJhdGUtdlRheEZhY3RvcjIpKi4wMTUpLnRvRml4ZWQoMik7XHJcbiAgICAgIHRoaXMuYmFMb3QucHJvZkZlZSA9ICh0aGlzLmJhTG90Lm5ldFByb2NlZWRzLygxLS4wNi0uMDE1LXRoaXMuYmFMb3QucHJvZkZlZVJhdGUtdlRheEZhY3RvcjIpKnRoaXMuYmFMb3QucHJvZkZlZVJhdGUpLnRvRml4ZWQoMik7XHJcbiAgICAgIHRoaXMuYmFMb3Qub3RoZXJFeHBlbnNlcyA9ICh0aGlzLmJhTG90Lm5ldFByb2NlZWRzLygxLS4wNi0uMDE1LXRoaXMuYmFMb3QucHJvZkZlZVJhdGUtdlRheEZhY3RvcjIpKnZUYXhGYWN0b3IyKS50b0ZpeGVkKDIpO1xyXG4gICAgICB0aGlzLmJhTG90LnNlbGxQcmljZSA9IE51bWJlcigoK3RoaXMuYmFMb3QubmV0UHJvY2VlZHMgKyArdGhpcy5iYUxvdC5jYXBpdGFsR2FpbnNUYXggKyArdGhpcy5iYUxvdC5kb2NzU3RhbXAgKyArdGhpcy5iYUxvdC5wcm9mRmVlICsgK3RoaXMuYmFMb3Qub3RoZXJFeHBlbnNlcykudG9GaXhlZCgyKSk7XHJcblxyXG4gICB9XHJcblxyXG59Il19