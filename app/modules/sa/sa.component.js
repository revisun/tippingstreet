"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@angular/core");
const lot_model_1 = require("../shared/lot/lot.model");
let SaComponent = class SaComponent {
    constructor() {
        this.text = 'Seller\'s Account Calculation';
        this.baLot = new lot_model_1.Lot();
        this.baLot.lotSizeSQM = 0;
        this.baLot.FMV = 0;
        this.baLot.sellPrice = 0;
        this.baLot.zonalValue = 0;
        this.baLot.profFeeRate = 0;
        this.baLot.nonStdExpenses = 0;
    }
    submit() {
        if (this.baLot.sellPrice != 0) {
            this.lotCalc();
        }
    }
    lotCalc() {
        if (Number.isNaN(this.baLot.lotSizeSQM) || (this.baLot.lotSizeSQM === 0)) {
            this.baLot.pricePerSQM = 0;
        }
        else {
            this.baLot.pricePerSQM = Number((this.baLot.sellPrice / this.baLot.lotSizeSQM).toFixed(2));
        }
        this.baLot.taxBase = Math.max(this.baLot.zonalValue, this.baLot.sellPrice);
        this.baLot.capitalGainsTax = Number((this.baLot.taxBase * .06).toLocaleString());
        this.baLot.docsStamp = Number((this.baLot.taxBase * .015).toLocaleString());
        this.baLot.profFee = Number((this.baLot.sellPrice * this.baLot.profFeeRate).toLocaleString());
        this.baLot.otherExpenses = Number(this.baLot.nonStdExpenses.toLocaleString());
        this.baLot.netProceeds = (Number(this.baLot.sellPrice) - Number(this.baLot.capitalGainsTax) - Number(this.baLot.docsStamp) - Number(this.baLot.profFee) - Number(this.baLot.otherExpenses)).toFixed(2);
    }
};
SaComponent = __decorate([
    core_1.Component({
        selector: 'sa',
        templateUrl: 'modules/sa/sa.component.html',
        changeDetection: core_1.ChangeDetectionStrategy.OnPush
    }),
    __metadata("design:paramtypes", [])
], SaComponent);
exports.SaComponent = SaComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2EuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2EuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsd0NBQW1FO0FBQ25FLHVEQUE4QztBQU85QyxJQUFhLFdBQVcsR0FBeEI7SUFJRTtRQUhBLFNBQUksR0FBVywrQkFBK0IsQ0FBQztRQUk3QyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksZUFBRyxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQzFCLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNuQixJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQzFCLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsR0FBRyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELE1BQU07UUFDSixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzlCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNqQixDQUFDO0lBQ0gsQ0FBQztJQUVELE9BQU87UUFFTCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkUsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQzdCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0YsQ0FBQztRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMxRSxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsR0FBRyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBQyxHQUFHLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO1FBQy9FLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFDLElBQUksQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7UUFDMUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO1FBQzVGLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO1FBQzlFLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFHek0sQ0FBQztDQUVGLENBQUE7QUFyQ1ksV0FBVztJQUx2QixnQkFBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLElBQUk7UUFDZCxXQUFXLEVBQUUsOEJBQThCO1FBQzNDLGVBQWUsRUFBRSw4QkFBdUIsQ0FBQyxNQUFNO0tBQ2hELENBQUM7O0dBQ1csV0FBVyxDQXFDdkI7QUFyQ1ksa0NBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IExvdCB9IGZyb20gJy4uL3NoYXJlZC9sb3QvbG90Lm1vZGVsJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2EnLFxyXG4gIHRlbXBsYXRlVXJsOiAnbW9kdWxlcy9zYS9zYS5jb21wb25lbnQuaHRtbCcsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIFNhQ29tcG9uZW50IHtcclxuICB0ZXh0OiBzdHJpbmcgPSAnU2VsbGVyXFwncyBBY2NvdW50IENhbGN1bGF0aW9uJztcclxuICBiYUxvdDogTG90O1xyXG5cclxuICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgdGhpcy5iYUxvdCA9IG5ldyBMb3QoKTtcclxuICAgIHRoaXMuYmFMb3QubG90U2l6ZVNRTSA9IDA7XHJcbiAgICB0aGlzLmJhTG90LkZNViA9IDA7XHJcbiAgICB0aGlzLmJhTG90LnNlbGxQcmljZSA9IDA7XHJcbiAgICB0aGlzLmJhTG90LnpvbmFsVmFsdWUgPSAwO1xyXG4gICAgdGhpcy5iYUxvdC5wcm9mRmVlUmF0ZSA9IDA7XHJcbiAgICB0aGlzLmJhTG90Lm5vblN0ZEV4cGVuc2VzID0gMDtcclxuICB9XHJcblxyXG4gIHN1Ym1pdCgpe1xyXG4gICAgaWYgKHRoaXMuYmFMb3Quc2VsbFByaWNlICE9IDApIHtcclxuICAgICAgdGhpcy5sb3RDYWxjKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBsb3RDYWxjKCkge1xyXG5cclxuICAgIGlmIChOdW1iZXIuaXNOYU4odGhpcy5iYUxvdC5sb3RTaXplU1FNKXx8KHRoaXMuYmFMb3QubG90U2l6ZVNRTSA9PT0gMCkpIHtcclxuICAgICAgdGhpcy5iYUxvdC5wcmljZVBlclNRTSA9IDA7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmJhTG90LnByaWNlUGVyU1FNID0gTnVtYmVyKCh0aGlzLmJhTG90LnNlbGxQcmljZS90aGlzLmJhTG90LmxvdFNpemVTUU0pLnRvRml4ZWQoMikpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5iYUxvdC50YXhCYXNlID0gTWF0aC5tYXgodGhpcy5iYUxvdC56b25hbFZhbHVlLHRoaXMuYmFMb3Quc2VsbFByaWNlKTtcclxuICAgIHRoaXMuYmFMb3QuY2FwaXRhbEdhaW5zVGF4ID0gTnVtYmVyKCh0aGlzLmJhTG90LnRheEJhc2UqLjA2KS50b0xvY2FsZVN0cmluZygpKTtcclxuICAgIHRoaXMuYmFMb3QuZG9jc1N0YW1wID0gTnVtYmVyKCh0aGlzLmJhTG90LnRheEJhc2UqLjAxNSkudG9Mb2NhbGVTdHJpbmcoKSk7XHJcbiAgICB0aGlzLmJhTG90LnByb2ZGZWUgPSBOdW1iZXIoKHRoaXMuYmFMb3Quc2VsbFByaWNlKnRoaXMuYmFMb3QucHJvZkZlZVJhdGUpLnRvTG9jYWxlU3RyaW5nKCkpO1xyXG4gICAgdGhpcy5iYUxvdC5vdGhlckV4cGVuc2VzID0gTnVtYmVyKHRoaXMuYmFMb3Qubm9uU3RkRXhwZW5zZXMudG9Mb2NhbGVTdHJpbmcoKSk7XHJcbiAgICB0aGlzLmJhTG90Lm5ldFByb2NlZWRzID0gKE51bWJlcih0aGlzLmJhTG90LnNlbGxQcmljZSkgLSBOdW1iZXIodGhpcy5iYUxvdC5jYXBpdGFsR2FpbnNUYXgpIC0gTnVtYmVyKHRoaXMuYmFMb3QuZG9jc1N0YW1wKSAtIE51bWJlcih0aGlzLmJhTG90LnByb2ZGZWUpIC0gTnVtYmVyKHRoaXMuYmFMb3Qub3RoZXJFeHBlbnNlcykpLnRvRml4ZWQoMik7XHJcblxyXG5cclxuICB9XHJcblxyXG59Il19